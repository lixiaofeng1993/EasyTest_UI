# Generated by Django 3.0.7 on 2020-07-02 19:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Browser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('value', models.CharField(max_length=20)),
                ('remark', models.TextField(null=True)),
                ('status', models.IntegerField(default=0, null=True)),
                ('installPath', models.TextField(null=True)),
                ('driverPath', models.TextField(null=True)),
            ],
            options={
                'db_table': 'Browser',
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('host', models.TextField()),
                ('remark', models.TextField(null=True)),
            ],
            options={
                'db_table': 'Environment',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('remark', models.TextField(null=True)),
                ('creator', models.CharField(default='lixiaofeng', max_length=20)),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'project',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('taskId', models.IntegerField(default=0, null=True)),
                ('browsers', models.TextField(null=True)),
                ('beforeLogin', models.TextField(null=True)),
                ('environments', models.TextField(null=True)),
                ('status', models.IntegerField(default=10)),
                ('parameter', models.TextField()),
                ('steps', models.TextField()),
                ('checkType', models.TextField()),
                ('checkValue', models.TextField()),
                ('checkText', models.TextField(null=True)),
                ('selectText', models.TextField(null=True)),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Project')),
            ],
            options={
                'db_table': 'Result',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('testcases', models.TextField()),
                ('browsers', models.TextField(null=True)),
                ('status', models.IntegerField(default=1, null=True)),
                ('timing', models.IntegerField(default=1)),
                ('remark', models.TextField(null=True)),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'Task',
            },
        ),
        migrations.CreateModel(
            name='TaskRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_id_list', models.CharField(max_length=200, null=True)),
                ('result_id', models.ImageField(null=True, upload_to='')),
            ],
            options={
                'db_table': 'TaskRelation',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('remark', models.TextField(null=True)),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(default='lixiaofeng', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'team',
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('level', models.IntegerField(default=1)),
                ('beforeLogin', models.TextField(null=True)),
                ('steps', models.TextField()),
                ('parameter', models.TextField()),
                ('checkType', models.TextField()),
                ('checkValue', models.TextField()),
                ('checkText', models.TextField(null=True)),
                ('selectText', models.TextField(null=True)),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('remark', models.TextField(null=True)),
                ('project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Project')),
            ],
            options={
                'db_table': 'testcase',
            },
        ),
        migrations.CreateModel(
            name='TeamUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('team', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Team')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'team_users',
            },
        ),
        migrations.CreateModel(
            name='SplitResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loginStatus', models.IntegerField(default=0)),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('startTime', models.DateTimeField(null=True)),
                ('finishTime', models.DateTimeField(null=True)),
                ('parameter', models.TextField()),
                ('expect', models.BooleanField()),
                ('status', models.IntegerField(default=10)),
                ('remark', models.TextField(null=True)),
                ('step_num', models.IntegerField(default=0)),
                ('error_name', models.CharField(default='', max_length=200)),
                ('again', models.IntegerField(default=0, null=True)),
                ('browser', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Browser')),
                ('environment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Environment')),
                ('result', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Result')),
            ],
            options={
                'db_table': 'SplitResult',
            },
        ),
        migrations.AddField(
            model_name='result',
            name='testcase',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.TestCase'),
        ),
        migrations.AddField(
            model_name='project',
            name='team',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Team'),
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('remark', models.TextField(null=True)),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Project')),
            ],
            options={
                'db_table': 'page',
            },
        ),
        migrations.CreateModel(
            name='ModularTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255)),
                ('Icon', models.CharField(max_length=255)),
                ('model_name', models.CharField(max_length=6)),
                ('status', models.IntegerField(default=1)),
                ('team', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Team')),
            ],
            options={
                'db_table': 'modular',
            },
        ),
        migrations.CreateModel(
            name='LoginConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('remark', models.TextField(null=True)),
                ('checkType', models.TextField(default='')),
                ('checkValue', models.TextField(default='')),
                ('checkText', models.TextField(default='')),
                ('selectText', models.TextField(default='')),
                ('steps', models.TextField()),
                ('params', models.TextField()),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Project')),
            ],
            options={
                'db_table': 'login',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('type', models.IntegerField(default=2)),
                ('package', models.CharField(max_length=200, null=True)),
                ('clazz', models.CharField(max_length=50, null=True)),
                ('method', models.CharField(max_length=50, null=True)),
                ('params', models.TextField(null=True)),
                ('steps', models.TextField(null=True)),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('remark', models.TextField(null=True)),
                ('project', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Project')),
            ],
            options={
                'db_table': 'keyword',
            },
        ),
        migrations.CreateModel(
            name='EnvironmentLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.TextField()),
                ('environment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Environment')),
                ('login', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.LoginConfig')),
            ],
            options={
                'db_table': 'EnvironmentLogin',
            },
        ),
        migrations.AddField(
            model_name='environment',
            name='project',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Project'),
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('remark', models.TextField(null=True)),
                ('createTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('by', models.CharField(max_length=20)),
                ('locator', models.CharField(max_length=200)),
                ('page', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Page')),
                ('project', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.Project')),
            ],
            options={
                'db_table': 'element',
            },
        ),
    ]
